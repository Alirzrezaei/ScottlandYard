package rezaei102772_scottland_yard;

import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.beans.value.ChangeListener;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.geometry.Bounds;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.CheckBox;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.stage.Stage;

/**
 *
 * @author Alireza
 */
public class FXMLDocumentController implements Initializable {

    private boolean DetectivesAI;
    private boolean MisterXAI;
    private int detectives = 3;

    @FXML
    private Pane pnMap;
    @FXML
    private Pane pnChange;

    @Override
    public void initialize(URL url, ResourceBundle rb) {

        setPnMap();
        try {
            playerChooser();
        } catch (IOException ex) {
            Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex);
        }

        ChangeListener<Number> stageSizeListener = (observable, oldValue, newValue) -> {
            int diffWidth = (int) (pnChange.getWidth() - pnChange.getMinWidth());
            int diffHeight = (int) (pnChange.getHeight() - pnChange.getMinHeight());
            System.out.println(diffWidth + ", " + diffHeight);

            pnMap.setPrefSize(pnChange.getMinWidth() + Math.min(diffWidth, diffHeight), pnChange.getMinHeight() + Math.min(diffWidth, diffHeight));
        };
        pnChange.widthProperty().addListener(stageSizeListener);
        pnChange.heightProperty().addListener(stageSizeListener);
    }

    public void setPnMap() {

        ImageView map = new ImageView();
        map.setImage(new Image("rezaei102772_scottland_yard/img/Spielplan.bmp"));
        pnMap.getChildren().add(map);
        map.fitWidthProperty().bind(pnMap.widthProperty());
        map.fitHeightProperty().bind(pnMap.heightProperty());
    }

    @FXML
    private void onClickMenuClose(ActionEvent event) {

    }

    @FXML
    private void onClickMenuAbout(ActionEvent event) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle("About");
        alert.setHeaderText("about me");
        alert.setContentText("The Scotland Yard board\n"
                + "Number of Players: 2-6 Players\n"
                + "Developed with: Java programming language\n"
                + "Requirement: JDK 8 or higher\n \n"
                + "Scotland Yard is a board game in which a team of players, as police, "
                + "cooperate to track down a player controlling a criminal around a board representing the streets of London, "
                + "first published in 1983.\n"
                + "\ndeveloped by Alireza Rezaei");
        alert.showAndWait();
    }

    private void playerChooser() throws IOException {
        Label secondLabel = new Label("Detectives");
        
        
        ObservableList<String> options
                = FXCollections.observableArrayList(
                        "3",
                        "4",
                        "5"
                );
        ComboBox comboBox = new ComboBox(options);
        
        CheckBox misterX = new CheckBox("MisterAI");
        CheckBox detectives = new CheckBox("DetectivesAI");
        
        Button btnOk = new Button("ok");
        

        StackPane secondaryLayout = new StackPane();
    
        secondaryLayout.getChildren().addAll(secondLabel, comboBox, misterX, detectives);
        secondaryLayout.getChildren().add(btnOk);
        btnOk.setPrefSize(75, 25);
        secondLabel.setTranslateX(-65);
        secondLabel.setTranslateY(-50);
        comboBox.setTranslateX(30);
        comboBox.setTranslateY(-50);
        misterX.setTranslateX(-60);
        misterX.setTranslateY(0);
        detectives.setTranslateX(-50);
        detectives.setTranslateY(20);
        btnOk.setTranslateX(0);
        btnOk.setTranslateY(50);
        
        

        Scene secondScene = new Scene(secondaryLayout, 250, 150);

        // New window (Stage)
        Stage newWindow = new Stage();
        newWindow.setTitle("Second Stage");
        newWindow.setScene(secondScene);

        // Set position of second window, related to primary window.
        newWindow.setX(500);
        newWindow.setY(500);
        newWindow.setAlwaysOnTop(true);
        
        
        newWindow.show();

    }

}
